//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AsyncGenerator.TestCases;

namespace AsyncGenerator.Tests.Yields.Input
{
	public partial class TestCase
	{
		public async Task<IEnumerable<bool>> GetBoolsAsync(bool value)
		{
			var yields = new List<bool>();
			yields.Add(await (SimpleFile.WriteAsync("")));
			if (!value)
			{
				return yields;
			}
			yields.Add(true);
			return yields;
		}

		public async Task<IEnumerable<int>> GetIntsAsync(bool value)
		{
			var yields = new List<int>();
			if (!value)
			{
				return yields;
			}
			await (SimpleFile.ReadAsync());
			return yields;
		}

		public Task<IEnumerable<long>> GetLongsAsync(bool value)
		{
			try
			{
				var yields = new List<long>();
				if (!value)
				{
					return Task.FromResult<IEnumerable<long>>(yields);
				}
				yields.Add(1);
				yields.Add(2);
				return Task.FromResult<IEnumerable<long>>(yields);
			}
			catch (Exception ex)
			{
				return Task.FromException<IEnumerable<long>>(ex);
			}
		}
	}
}
