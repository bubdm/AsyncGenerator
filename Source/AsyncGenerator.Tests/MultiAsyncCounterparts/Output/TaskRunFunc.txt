//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AsyncGenerator.TestCases;
using NUnit.Framework;

namespace AsyncGenerator.Tests.MultiAsyncCounterparts.Input
{
	using System.Threading;
	public partial class TaskRunFunc
	{

		public Task Test2Async(CancellationToken cancellationToken = default(CancellationToken))
		{
			return Task.Run(async () =>
			{
				await (SimpleFile.ReadAsync(cancellationToken));
				return true;
			}, cancellationToken);
		}

		public Task Test3Async(CancellationToken cancellationToken = default(CancellationToken))
		{
			return Task.Run(() =>
			{
				return FuncAsync(cancellationToken);
			}, cancellationToken);
		}

		public Task Test5Async(CancellationToken cancellationToken = default(CancellationToken))
		{
			return Task.Run(() =>
			{
				try
				{
					Assert.DoesNotThrowAsync(() =>
					{
						return SimpleFile.ReadAsync(cancellationToken);
					});
					return Task.FromResult<bool>(true);
				}
				catch (Exception ex)
				{
					return Task.FromException<bool>(ex);
				}
			}, cancellationToken);
		}

		public Task<bool> FuncAsync(CancellationToken cancellationToken = default(CancellationToken))
		{
			return SimpleFile.WriteAsync("");
		}


	}
}
