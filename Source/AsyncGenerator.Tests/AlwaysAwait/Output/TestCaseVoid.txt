//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AsyncGenerator.TestCases;

namespace AsyncGenerator.Tests.AlwaysAwait.Input
{
	public partial class TestCase
	{
		public async Task SimpleVoidAsync()
		{
			await (SimpleFile.ReadAsync());
		}

		public async Task MultipleVoidAsync(bool value)
		{
			SimpleFile.Clear();
			if (value)
			{
				await (SimpleFile.ReadAsync());
			}
			else
			{
				await (SimpleFile.ReadAsync());
			}
		}

		public Task<bool> SimpleRetrunAsync()
		{
			return SimpleFile.WriteAsync("");
		}

		public Task<bool> MultipleReturnsAsync(bool value)
		{
			try
			{
				SimpleFile.Clear();
				if (value)
				{
					return SimpleFile.WriteAsync("A");
				}
				else
				{
					return SimpleFile.WriteAsync("B");
				}
			}
			catch (Exception ex)
			{
				return Task.FromException<bool>(ex);
			}
		}

		public async Task NestedVoidAsync()
		{
			await (SimpleVoidAsync());
		}

		public Task<bool> NestedAsync()
		{
			return SimpleRetrunAsync();
		}

	}
}
