//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using AsyncGenerator.TestCases;

namespace AsyncGenerator.Tests.HiddenMethods.Input
{
	public partial interface IFutureEnumerable<T> : IEnumerable<T>
	{
		[Obsolete]
		Task<IEnumerator<T>> GetEnumeratorAsync(CancellationToken cancellationToken = default(CancellationToken));
	}

	public partial class FutureEnumerable<TResult> : IFutureEnumerable<TResult>
	{
		
		async Task<IEnumerator<TResult>> IFutureEnumerable<TResult>.GetEnumeratorAsync(CancellationToken cancellationToken)
		{
			return (await (GetEnumerableAsync(cancellationToken))).GetEnumerator();
		}
	}

	public partial class DelayedEnumerator<T> : IFutureEnumerable<T>
	{

		public async Task<IEnumerator<T>> GetEnumeratorAsync(CancellationToken cancellationToken = default(CancellationToken))
		{
			return (await (GetEnumerableAsync(cancellationToken))).GetEnumerator();
		}
	}
}
